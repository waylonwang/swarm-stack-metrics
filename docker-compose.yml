# Update Time: 2023-09-05 18:10
version: "3.4"

services:
  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --web.console.libraries=/usr/share/prometheus/console_libraries --web.enable-lifecycle --web.console.templates=/usr/share/prometheus/consoles
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      PUID: 1000
      PGID: 1000       
      TZ: ${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - nfs_prometheus:/etc/prometheus
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.prometheus.entrypoints=websecure"
        - "traefik.http.routers.prometheus.service=prometheus"
        - "traefik.http.routers.prometheus.middlewares=auth-chain@file"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - homepage.group=Metrics
        - homepage.name=Prometheus
        - homepage.icon=prometheus.png
        - homepage.href=https://prometheus.${DOMAIN_SWARM}:4/
        - homepage.description=Prometheus
        - homepage.ping=http://prometheus:3000
        - homepage.weight=1
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.metrics == true

  # Grafana
  grafana:
    image: grafana/grafana:latest
    networks: [network_cluster]
    restart: on-failure
    environment:
      # 直接使用Portainer容器内的环境变量
      PUID: 1000
      PGID: 1000       
      TZ: ${TZ}
    volumes:
      - nfs_grafana_data:/var/lib/grafana
      - nfs_grafana_conf:/usr/share/grafana/conf
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN_SWARM}`)"
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.routers.grafana.service=grafana"
        - "traefik.http.routers.grafana.middlewares=noauth-chain@file"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - homepage.group=Metrics
        - homepage.name=Grafana
        - homepage.icon=grafana.png
        - homepage.href=https://grafana.${DOMAIN_SWARM}:4/
        - homepage.description=Grafana
        - homepage.ping=http://grafana:3000
        - homepage.weight=1
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == vm
          - node.labels.metrics == true

  # Cadvisor
  cadvisor:
    image: google/cadvisor
    networks: [network_cluster]
    restart: on-failure    
    ports:
      - "8888:8080"    
    environment:
      TZ: ${TZ}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro  
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

networks:
  network_cluster:
    external: true

x-common-keys-volume: &common-keys-volume
  type: nfs
  o: addr=${NFS_SERVER},rw,nfsvers=4

volumes:
  # NFS
  nfs_prometheus:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/metrics/prometheus  
  nfs_grafana_data:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/metrics/grafana/data        
  nfs_grafana_conf:
    driver: local
    driver_opts:
      <<: *common-keys-volume
      device: :${NFS_DEVICE}/metrics/grafana/conf         